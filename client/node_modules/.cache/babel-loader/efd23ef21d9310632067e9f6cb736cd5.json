{"ast":null,"code":"import _asyncToGenerator from\"/home/netto/Documentos/workspace/Nasa-Project/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"/home/netto/Documentos/workspace/Nasa-Project/client/node_modules/@babel/runtime/regenerator/index.js\";var API_URL='http://localhost:8000';function httpGetPlanets(){return _httpGetPlanets.apply(this,arguments);}function _httpGetPlanets(){_httpGetPlanets=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"\".concat(API_URL,\"/planets\"));case 2:response=_context.sent;_context.next=5;return response.json();case 5:return _context.abrupt(\"return\",_context.sent);case 6:case\"end\":return _context.stop();}}},_callee);}));return _httpGetPlanets.apply(this,arguments);}function httpGetLaunches(){return _httpGetLaunches.apply(this,arguments);}function _httpGetLaunches(){_httpGetLaunches=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var response,fetchedLaunches;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return fetch(\"\".concat(API_URL,\"/launches\"));case 2:response=_context2.sent;fetchedLaunches=response.json();return _context2.abrupt(\"return\",fetchedLaunches.sort(function(a,b){return a.flightNumber-b.flightNumber;}));case 5:case\"end\":return _context2.stop();}}},_callee2);}));return _httpGetLaunches.apply(this,arguments);}function httpSubmitLaunch(_x){return _httpSubmitLaunch.apply(this,arguments);}function _httpSubmitLaunch(){_httpSubmitLaunch=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(launch){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return fetch(\"\".concat(API_URL,\"/launches\"),{method:\"post\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(launch)});case 2:return _context3.abrupt(\"return\",_context3.sent);case 3:case\"end\":return _context3.stop();}}},_callee3);}));return _httpSubmitLaunch.apply(this,arguments);}function httpAbortLaunch(_x2){return _httpAbortLaunch.apply(this,arguments);}function _httpAbortLaunch(){_httpAbortLaunch=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(id){return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:case\"end\":return _context4.stop();}}},_callee4);}));return _httpAbortLaunch.apply(this,arguments);}export{httpGetPlanets,httpGetLaunches,httpSubmitLaunch,httpAbortLaunch};","map":{"version":3,"sources":["/home/netto/Documentos/workspace/Nasa-Project/client/src/hooks/requests.js"],"names":["API_URL","httpGetPlanets","fetch","response","json","httpGetLaunches","fetchedLaunches","sort","a","b","flightNumber","httpSubmitLaunch","launch","method","headers","body","JSON","stringify","httpAbortLaunch","id"],"mappings":"uRAAA,GAAMA,CAAAA,OAAO,CAAG,uBAAhB,C,QAEeC,CAAAA,c,oJAAf,sKAC0BC,CAAAA,KAAK,WAAIF,OAAJ,aAD/B,QACOG,QADP,qCAEcA,CAAAA,QAAQ,CAACC,IAAT,EAFd,6G,yDAKeC,CAAAA,e,uJAAf,4LACyBH,CAAAA,KAAK,WAAIF,OAAJ,cAD9B,QACQG,QADR,gBAEQG,eAFR,CAE0BH,QAAQ,CAACC,IAAT,EAF1B,kCAGSE,eAAe,CAACC,IAAhB,CAAqB,SAACC,CAAD,CAAIC,CAAJ,CAAU,CACpC,MAAOD,CAAAA,CAAC,CAACE,YAAF,CAAiBD,CAAC,CAACC,YAA1B,CACD,CAFM,CAHT,0D,0DAQeC,CAAAA,gB,4JAAf,kBAAgCC,MAAhC,6IACiBV,CAAAA,KAAK,WAAIF,OAAJ,cAAwB,CACxCa,MAAM,CAAE,MADgC,CAExCC,OAAO,CAAE,CACP,eAAgB,kBADT,CAF+B,CAKxCC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeL,MAAf,CALkC,CAAxB,CADtB,iH,2DAUeM,CAAAA,e,0JAAf,kBAA+BC,EAA/B,uK,kDAKA,OACElB,cADF,CAEEI,eAFF,CAGEM,gBAHF,CAIEO,eAJF","sourcesContent":["const API_URL = 'http://localhost:8000';\n\nasync function httpGetPlanets() {\n const response  =  await fetch(`${API_URL}/planets`);\n return await response.json();\n}\n\nasync function httpGetLaunches() {\n  const response = await fetch(`${API_URL}/launches`);\n  const fetchedLaunches = response.json();\n  return fetchedLaunches.sort((a, b ) =>{\n    return a.flightNumber - b.flightNumber;\n  });\n}\n\nasync function httpSubmitLaunch(launch) {\n    return await fetch(`${API_URL}/launches`, {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(launch),\n    });\n}\n\nasync function httpAbortLaunch(id) {\n  // TODO: Once API is ready.\n  // Delete launch with given ID.\n}\n\nexport {\n  httpGetPlanets,\n  httpGetLaunches,\n  httpSubmitLaunch,\n  httpAbortLaunch,\n};"]},"metadata":{},"sourceType":"module"}